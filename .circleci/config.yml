version: 2.1

orbs:
  prodsec: snyk/prodsec-orb@1

defaults: &defaults
  parameters:
    node_version:
      type: string
      default: ""
  working_directory: ~/resolve-deps

commands:
  install_deps:
    description: Install dependencies
    steps:
      - checkout
      - run:
          name: Use snyk-main npmjs user
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
      - run:
          name: Install dependencies
          command: npm install
  install_node_npm:
    description: Install correct Node version
    parameters:
      node_version:
        type: string
        default: ""
    steps:
      - run:
          name: Install correct version of Node
          command: nvm install << parameters.node_version >>
      - run:
          name: Use correct version of Node
          command: nvm use << parameters.node_version >>
  show_node_version:
    description: Log Node and npm version
    steps:
      - run:
          name: Node version
          command: node --version
      - run:
          name: NPM version
          command: npm --version

jobs:
  security-scans:
    resource_class: small
    <<: *defaults
    docker:
      - image: cimg/node:<< parameters.node_version >>
    steps:
      - show_node_version
      - checkout
      - attach_workspace:
          at: ~/resolve-deps
      - install_deps
      - prodsec/security_scans:
          mode: auto
          open-source-additional-arguments: --exclude=test
          release-branch: master
          iac-scan: disabled

  lint:
    <<: *defaults
    docker:
      - image: cimg/node:<< parameters.node_version >>
    steps:
      - show_node_version
      - checkout
      - attach_workspace:
          at: ~/resolve-deps
      - install_deps
      - run:
          name: Run lint
          command: npm run lint

  test-unix:
    <<: *defaults
    docker:
      - image: cimg/node:<< parameters.node_version >>
    steps:
      - checkout
      - attach_workspace:
          at: ~/resolve-deps
      - install_deps
      - show_node_version
      - run:
          name: Run tests
          command: npm test

  release:
    <<: *defaults
    docker:
      - image: cimg/node:<< parameters.node_version >>
    resource_class: small
    steps:
      - install_deps
      - run: sudo npm i -g semantic-release@17 @semantic-release/exec pkg
      - run:
          name: Publish to GitHub
          command: semantic-release

workflows:
  version: 2
  test_and_release:
    jobs:
      - prodsec/secrets-scan:
          name: Scan repository for secrets
          context:
            - snyk-bot-slack
          channel: snyk-vuln-alerts-sca
          filters:
            branches:
              ignore:
                - master
      - security-scans:
          name: Security Scans
          node_version: "16.20.2"
          context:
            - open_source-managed
            - nodejs-install
      - lint:
          name: Lint
          context: nodejs-install
          node_version: "16.20.2"
          filters:
            branches:
              ignore:
                - master
      - test-unix:
          name: Unix Tests for Node v16 support
          context: nodejs-install
          node_version: "16.20.2"
          requires:
            - Lint
          filters:
            branches:
              ignore:
                - master
      - test-unix:
          name: Unix Tests for Node v14 support
          context: nodejs-install
          node_version: "14.17.6"
          requires:
            - Lint
          filters:
            branches:
              ignore:
                - master
      - test-unix:
          name: Unix Tests for Node v12 support
          context: nodejs-install
          node_version: "12.22.12"
          requires:
            - Lint
          filters:
            branches:
              ignore:
                - master
      - release:
          name: Release
          context: nodejs-app-release
          node_version: "16.20.2"
          filters:
            branches:
              only:
                - master
